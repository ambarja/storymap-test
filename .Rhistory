install.packages("tidyverse")
library(tidyverse)
install.packages(c("rmdformats", "metathis", "pkgdown", "usethis", "roxygen2"))
install.packages(c("rmdformats", "metathis", "pkgdown", "usethis", "roxygen2"))
install.packages(c("xaringanExtra", "xaringanthemer"))
install.packages(c("sf", "raster", "stars", "terra", "tidyterra", "sfdep"))
library(sf)
library(stars)
library(remotes)
install.packages("remotes")
install.packages(c("leaflet", "leaflet.extras", "leaflet.extras2", "leafem", "leafpop", "leaflegend"))
install.packages("mapview")
library(mapview)
library(remotes)
install_github("r-spatial/rgee")
library(rgee)
ee_install()
y
library(rgee)
ee_Initialize()
ee_Initialize(user = "antony.barja@upch.pe",drive = TRUE)
ee_Initialize()
library(rgee)
ee_Initialize(user = "antony.barja@upch.pe",drive = TRUE)
ee_Initialize(user = "antony.barja@upch.pe",drive = TRUE)
ee_Initialize(user = "antony.barja@upch.pe",drive = TRUE)
library(rgee)
ee_Initialize(user = "antony.barja@upch.pe",drive = TRUE)
library(rgee)
ee_Initialize(user = "antony.barja@upch.pe",drive = TRUE)
rgee::ee_user_info()
rgee::ee_users()
rgee::ee_clean_credentials()
library(rgee)
ee_Initialize(user = "antony.barja@upch.pe",drive = TRUE)
ee_install()
ee_clean_pyenv()
ee_install()
library(rgee)
ee_install()
ee_Initialize(user = "antony.barja@upch.pe",drive = TRUE)
ee_Initialize(user = "antony.barja@upch.pe")
ee_Initialize(user = "antony.barja@upch.pe")
ee_Initialize(user = "antony.barja8@gmail.com")
ee_Initialize(user = "antony.barja8@gmail.com",drive = T)
ee_Initialize(user = "antony.barja8@gmail.com",drive = T)
library(rgee)
ee_Initialize(user = "antony.barja8@gmail.com",drive = T)
Map
library(qgisprocess)
qgis_configure()
qgis_version()
qgis_algorithms()
library(qgisprocess)
qgis_version()
qgis_algorithms()
library(qgisprocess)
qgis_configure()
qgis_providers()
qgis_algorithms() |> View()
library(qgisprocess)
library(qgisprocess)
library(qgisprocess)
qgis_configure()
traceback()
traceback()
traceback(qgis_configure())
library(here)
here
here()
here::i_am()
?i_am()
setwd("~/Documentos/GitHub/storymap-test")
library(geojsonio)
library(sf)
data <- read.csv(
"resources/csv/StoryMap.csv",
encoding = "latin1") %>%
st_as_sf(coords = c("lon","lat"), crs = 4326)
geojson_write(
data,
file = "StoryMap.geojson"
)
